{"ast":null,"code":"import React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Logo from \"../../../assets/images/Logo.jpg\";\nimport styles from \"./styles\";\nimport CustomButton from \"../../componets/CustomButton\";\nimport CustomInput from \"../../componets/CustomInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction RegisterUserScreen() {\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height;\n  var _useState = useState(''),\n    username = _useState.username,\n    setUsername = _useState.setUsername;\n  var _useState2 = useState(''),\n    password = _useState2.password,\n    setPassword = _useState2.setPassword;\n  var loginbtnpressed = function loginbtnpressed() {\n    console.warn(\"login btn pressed\");\n  };\n  var forgotbtnpressed = function forgotbtnpressed() {\n    console.warn(\"forgot btn pressed\");\n  };\n  var facebookbtnpressed = function facebookbtnpressed() {\n    console.warn(\"facebbok btn pressed\");\n  };\n  var googlebtnpressed = function googlebtnpressed() {\n    console.warn(\"google btn pressed\");\n  };\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(View, {\n        style: styles.titleContainer,\n        children: _jsx(Text, {\n          style: styles.title,\n          children: \"Create an account\"\n        })\n      }), _jsx(CustomInput, {\n        icon: \"user\",\n        placeholder: \"username\",\n        value: username,\n        setValue: setUsername\n      }), _jsx(CustomInput, {\n        icon: \"email\",\n        placeholder: \"Email\",\n        value: username,\n        setValue: setUsername\n      }), _jsx(CustomInput, {\n        icon: \"lock\",\n        placeholder: \"password\",\n        value: password,\n        setValue: setPassword,\n        secureTextEntry: true\n      }), _jsx(CustomInput, {\n        icon: \"lock\",\n        placeholder: \"Repeat password\",\n        value: password,\n        setValue: setPassword,\n        secureTextEntry: true\n      }), _jsx(CustomButton, {\n        text: \"Register\",\n        onpress: loginbtnpressed,\n        type: \"PRIMARY\",\n        color: \"PRIMARY\"\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          children: \"By clicking you agree that you have read the licence agreement\"\n        })\n      }), _jsx(CustomButton, {\n        text: \"Sign with Facebook\",\n        onpress: facebookbtnpressed,\n        type: \"PRIMARY\",\n        color: \"PRIMARY\",\n        icon: \"facebook-with-circle\"\n      }), _jsx(CustomButton, {\n        text: \"Sign with Google\",\n        onpress: googlebtnpressed,\n        type: \"SECONDARY\",\n        color: \"SECONDARY\",\n        icon: \"twitter\"\n      }), _jsx(CustomButton, {\n        text: \"Already have an account? login\",\n        onpress: googlebtnpressed,\n        type: \"SECONDARY\",\n        color: \"SECONDARY\"\n      })]\n    })\n  });\n}\nexport default RegisterUserScreen;","map":{"version":3,"names":["React","useState","Logo","styles","CustomButton","CustomInput","RegisterUserScreen","useWindowDimensions","height","username","setUsername","password","setPassword","loginbtnpressed","console","warn","forgotbtnpressed","facebookbtnpressed","googlebtnpressed","root","titleContainer","title"],"sources":["/home/tinsae/Desktop/betoch/src/screens/RegisterUserScreen/index.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport { View, Text,Image, ScrollView, StyleSheet ,useWindowDimensions} from \"react-native\";\nimport  Logo from \"../../../assets/images/Logo.jpg\"\nimport styles from \"./styles\";\nimport CustomButton from \"../../componets/CustomButton\";\nimport CustomInput from \"../../componets/CustomInput\"\n\n\n\n\n  \nfunction RegisterUserScreen() {\n    \n    const {height} = useWindowDimensions()\n\n    const {username,setUsername} = useState('')\n    const {password,setPassword} = useState('')\n\n    const loginbtnpressed = () => {\n        console.warn(\"login btn pressed\")\n    }\n\n\n    const forgotbtnpressed = () => {\n        console.warn(\"forgot btn pressed\")\n    }\n \n\n\n    const facebookbtnpressed = () => {\n        console.warn(\"facebbok btn pressed\")\n    }\n\n\n    const googlebtnpressed = () => {\n        console.warn(\"google btn pressed\")\n    }\n  return (\n    <ScrollView>\n    <View style = {styles.root}>\n\n    <View style = {styles.titleContainer}>\n        <Text style = {styles.title}>Create an account</Text>\n    </View>\n      <CustomInput icon = {\"user\"}placeholder={ \"username\"} value = {username} setValue = {setUsername}/>\n      <CustomInput icon = {\"email\"} placeholder={ \"Email\"} value = {username} setValue = {setUsername}/>\n      <CustomInput icon = {\"lock\"} placeholder={ \"password\"} value = {password} setValue = {setPassword} secureTextEntry = {true}/>\n      <CustomInput icon = {\"lock\"} placeholder={ \"Repeat password\"} value = {password} setValue = {setPassword} secureTextEntry = {true}/>\n\n\n    <CustomButton text = \"Register\" onpress={loginbtnpressed} type = \"PRIMARY\" color = \"PRIMARY\" />\n    <View>\n        <Text>By clicking you agree that you have read the licence agreement</Text>\n    </View>\n\n\n\n    <CustomButton text = \"Sign with Facebook\" onpress={facebookbtnpressed} type = \"PRIMARY\" color = \"PRIMARY\" icon = \"facebook-with-circle\"/>\n    <CustomButton text = \"Sign with Google\" onpress={googlebtnpressed} type = \"SECONDARY\" color = \"SECONDARY\" icon = \"twitter\"/>\n\n    <CustomButton text = \"Already have an account? login\" onpress={googlebtnpressed} type = \"SECONDARY\" color = \"SECONDARY\"/>\n    </View>\n    </ScrollView>\n  );\n}\n\n\n\nexport default RegisterUserScreen;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtC,OAAQC,IAAI;AACZ,OAAOC,MAAM;AACb,OAAOC,YAAY;AACnB,OAAOC,WAAW;AAAmC;AAAA;AAMrD,SAASC,kBAAkB,GAAG;EAE1B,2BAAiBC,mBAAmB,EAAE;IAA/BC,MAAM,wBAANA,MAAM;EAEb,gBAA+BP,QAAQ,CAAC,EAAE,CAAC;IAApCQ,QAAQ,aAARA,QAAQ;IAACC,WAAW,aAAXA,WAAW;EAC3B,iBAA+BT,QAAQ,CAAC,EAAE,CAAC;IAApCU,QAAQ,cAARA,QAAQ;IAACC,WAAW,cAAXA,WAAW;EAE3B,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC1BC,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;EACrC,CAAC;EAGD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC3BF,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;EACtC,CAAC;EAID,IAAME,kBAAkB,GAAG,SAArBA,kBAAkB,GAAS;IAC7BH,OAAO,CAACC,IAAI,CAAC,sBAAsB,CAAC;EACxC,CAAC;EAGD,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC3BJ,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;EACtC,CAAC;EACH,OACE,KAAC,UAAU;IAAA,UACX,MAAC,IAAI;MAAC,KAAK,EAAIZ,MAAM,CAACgB,IAAK;MAAA,WAE3B,KAAC,IAAI;QAAC,KAAK,EAAIhB,MAAM,CAACiB,cAAe;QAAA,UACjC,KAAC,IAAI;UAAC,KAAK,EAAIjB,MAAM,CAACkB,KAAM;UAAA;QAAA;MAAyB,EAClD,EACL,KAAC,WAAW;QAAC,IAAI,EAAI,MAAO;QAAA,WAAW,EAAG,UAAW;QAAC,KAAK,EAAIZ,QAAS;QAAC,QAAQ,EAAIC;MAAY,EAAE,EACnG,KAAC,WAAW;QAAC,IAAI,EAAI,OAAQ;QAAC,WAAW,EAAG,OAAQ;QAAC,KAAK,EAAID,QAAS;QAAC,QAAQ,EAAIC;MAAY,EAAE,EAClG,KAAC,WAAW;QAAC,IAAI,EAAI,MAAO;QAAC,WAAW,EAAG,UAAW;QAAC,KAAK,EAAIC,QAAS;QAAC,QAAQ,EAAIC,WAAY;QAAC,eAAe,EAAI;MAAK,EAAE,EAC7H,KAAC,WAAW;QAAC,IAAI,EAAI,MAAO;QAAC,WAAW,EAAG,iBAAkB;QAAC,KAAK,EAAID,QAAS;QAAC,QAAQ,EAAIC,WAAY;QAAC,eAAe,EAAI;MAAK,EAAE,EAGtI,KAAC,YAAY;QAAC,IAAI,EAAG,UAAU;QAAC,OAAO,EAAEC,eAAgB;QAAC,IAAI,EAAG,SAAS;QAAC,KAAK,EAAG;MAAS,EAAG,EAC/F,KAAC,IAAI;QAAA,UACD,KAAC,IAAI;UAAA;QAAA;MAAsE,EACxE,EAIP,KAAC,YAAY;QAAC,IAAI,EAAG,oBAAoB;QAAC,OAAO,EAAEI,kBAAmB;QAAC,IAAI,EAAG,SAAS;QAAC,KAAK,EAAG,SAAS;QAAC,IAAI,EAAG;MAAsB,EAAE,EACzI,KAAC,YAAY;QAAC,IAAI,EAAG,kBAAkB;QAAC,OAAO,EAAEC,gBAAiB;QAAC,IAAI,EAAG,WAAW;QAAC,KAAK,EAAG,WAAW;QAAC,IAAI,EAAG;MAAS,EAAE,EAE5H,KAAC,YAAY;QAAC,IAAI,EAAG,gCAAgC;QAAC,OAAO,EAAEA,gBAAiB;QAAC,IAAI,EAAG,WAAW;QAAC,KAAK,EAAG;MAAW,EAAE;IAAA;EAClH,EACM;AAEjB;AAIA,eAAeZ,kBAAkB"},"metadata":{},"sourceType":"module"}